AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'graphql_api

  SAM Template for graphql_api

  '
Globals:
  Function:
    Tracing: Active
    Timeout: 3
    Environment:
      Variables:
        TABLE_NAME:
          Ref: DynamoDBBabySitterTable
        UPDATE_JOB_APPLICATIONS_SQS_QUEUE:
          Ref: UpdateJobApplicationsSQSQueue
        STATE_MACHINE_ARN:
          Ref: BookNannyStateMachine
        LOG_LEVEL: DEBUG
        POWERTOOLS_LOGGER_SAMPLE_RATE: 0.1
        POWERTOOLS_LOGGER_LOG_EVENT: true
        POWERTOOLS_SERVICE_NAME: babysitter_api_service
        POWERTOOLS_METRICS_NAMESPACE: babysitter_api
Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName:
        Fn::Sub: ${AWS::StackName}-UserPool
      AutoVerifiedAttributes:
      - email
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: babysitter_api
      GenerateSecret: false
      UserPoolId:
        Ref: CognitoUserPool
      ExplicitAuthFlows:
      - ADMIN_NO_SRP_AUTH
  BabySitterFunction:
    Type: AWS::Serverless::Function
    DependsOn:
    - LambdaLoggingPolicy
    Properties:
      CodeUri: BabySitterFunction
      Handler: app.lambda_handler
      Runtime: python3.8
      Description: Sample Lambda Powertools Direct Lambda Resolver
      Tags:
        SOLUTION: LambdaPowertoolsPython
      Layers:
      - Fn::GetAtt:
        - AwsSamAutoDependencyLayerNestedStack
        - Outputs.BabySitterFunctiond87509c6DepLayer
    Connectors:
      DynamoDBRWConnector:
        Properties:
          Destination:
            Id: DynamoDBBabySitterTable
          Permissions:
          - Read
          - Write
    Metadata:
      SamResourceId: BabySitterFunction
  UpdateJobApplicationsFunction:
    Type: AWS::Serverless::Function
    DependsOn:
    - LambdaLoggingPolicy
    Properties:
      CodeUri: UpdateJobApplicationsFunction
      Handler: update_job_application.lambda_handler
      Runtime: python3.8
      Description: Lambda Powertools Direct Lambda Resolver
      Events:
        RetrieveFromSQS:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - UpdateJobApplicationsSQSQueue
              - Arn
            BatchSize: 5
            FunctionResponseTypes:
            - ReportBatchItemFailures
      Layers:
      - Fn::GetAtt:
        - AwsSamAutoDependencyLayerNestedStack
        - Outputs.UpdateJobApplicationsFunctiond5f947c6DepLayer
    Connectors:
      DynamoDBWConnectors:
        Properties:
          Destination:
            Id: DynamoDBBabySitterTable
          Permissions:
          - Write
      SQSRConnectors:
        Properties:
          Destination:
            Id: UpdateJobApplicationsSQSQueue
          Permissions:
          - Write
    Metadata:
      SamResourceId: UpdateJobApplicationsFunction
  AddUserToGroupFunction:
    Type: AWS::Serverless::Function
    DependsOn:
    - LambdaLoggingPolicy
    Properties:
      CodeUri: AddUserToGroupFunction
      Handler: add_user_to_group.lambda_handler
      Runtime: python3.8
      Description: Lambda Powertools Direct Lambda Resolver
      Policies:
      - Statement:
        - Effect: Allow
          Action:
          - cognito-idp:AdminAddUserToGroup
          Resource:
          - Fn::GetAtt:
            - CognitoUserPool
            - Arn
      Layers:
      - Fn::GetAtt:
        - AwsSamAutoDependencyLayerNestedStack
        - Outputs.AddUserToGroupFunction339552e8DepLayer
    Metadata:
      SamResourceId: AddUserToGroupFunction
  SQSSendMessagePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: SQSSendMessagePolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - sqs:SendMessage*
          Resource:
            Fn::GetAtt:
            - UpdateJobApplicationsSQSQueue
            - Arn
      Roles:
      - Ref: AddBabysitterRole
  AppSyncServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - appsync.amazonaws.com
          Action:
          - sts:AssumeRole
  InvokeLambdaResolverPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: DirectAppSyncLambda
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: lambda:invokeFunction
          Resource:
          - Fn::GetAtt:
            - BabySitterFunction
            - Arn
        - Effect: Allow
          Action: states:StartExecution
          Resource:
          - Fn::GetAtt:
            - BookNannyStateMachine
            - Arn
      Roles:
      - Ref: AppSyncServiceRole
      - Ref: AddBabysitterRole
  LambdaLoggingPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: LambdaXRayPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource: '*'
      Roles:
      - Ref: AddBabysitterRole
  AddBabysitterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
  RoleAppSyncCloudWatch:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - sts:AssumeRole
          Principal:
            Service:
            - appsync.amazonaws.com
  BabySitterApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: BabySitterApi
      AuthenticationType: API_KEY
      AdditionalAuthenticationProviders:
      - AuthenticationType: AMAZON_COGNITO_USER_POOLS
        UserPoolConfig:
          AwsRegion:
            Ref: AWS::Region
          UserPoolId:
            Ref: CognitoUserPool
      XrayEnabled: true
      LogConfig:
        CloudWatchLogsRoleArn:
          Fn::GetAtt:
          - RoleAppSyncCloudWatch
          - Arn
        ExcludeVerboseContent: false
        FieldLogLevel: ALL
  BabySitterApiKey:
    Type: AWS::AppSync::ApiKey
    Properties:
      ApiId:
        Fn::GetAtt:
        - BabySitterApi
        - ApiId
  BabySitterApiSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - BabySitterApi
        - ApiId
      DefinitionS3Location: ../../schema/schema.graphql
  BabySitterFunctionDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - BabySitterApi
        - ApiId
      Name: BabySitterLambdaDirectResolver
      Type: AWS_LAMBDA
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - BabySitterFunction
          - Arn
  CreateUserResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - BabySitterApi
        - ApiId
      TypeName: Mutation
      FieldName: createUser
      DataSourceName:
        Fn::GetAtt:
        - BabySitterFunctionDataSource
        - Name
  UpdateUserResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - BabySitterApi
        - ApiId
      TypeName: Mutation
      FieldName: updateUser
      DataSourceName:
        Fn::GetAtt:
        - BabySitterFunctionDataSource
        - Name
  GetUserResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - BabySitterApi
        - ApiId
      TypeName: Query
      FieldName: getUser
      DataSourceName:
        Fn::GetAtt:
        - BabySitterFunctionDataSource
        - Name
  UpdateUserStatusResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - BabySitterApi
        - ApiId
      TypeName: Mutation
      FieldName: updateUserStatus
      DataSourceName:
        Fn::GetAtt:
        - BabySitterFunctionDataSource
        - Name
  CreateJobResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - BabySitterApi
        - ApiId
      TypeName: Mutation
      FieldName: createJob
      DataSourceName:
        Fn::GetAtt:
        - BabySitterFunctionDataSource
        - Name
  ApplyToJobResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - BabySitterApi
        - ApiId
      TypeName: Mutation
      FieldName: applyToJob
      DataSourceName:
        Fn::GetAtt:
        - BabySitterFunctionDataSource
        - Name
  bookNannyResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - BabySitterApi
        - ApiId
      TypeName: Mutation
      FieldName: bookNanny
      DataSourceName:
        Fn::GetAtt:
        - BabySitterFunctionDataSource
        - Name
  ListAllJobsResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - BabySitterApi
        - ApiId
      TypeName: Query
      FieldName: listAllJobs
      DataSourceName:
        Fn::GetAtt:
        - BabySitterFunctionDataSource
        - Name
  ListApplicationsPerJobResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - BabySitterApi
        - ApiId
      TypeName: Query
      FieldName: listApplicationsPerJob
      DataSourceName:
        Fn::GetAtt:
        - BabySitterFunctionDataSource
        - Name
  ListJobsPerParentResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - BabySitterApi
        - ApiId
      TypeName: Query
      FieldName: listJobsPerParent
      DataSourceName:
        Fn::GetAtt:
        - BabySitterFunctionDataSource
        - Name
  ListJobsAppliedToResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - BabySitterApi
        - ApiId
      TypeName: Query
      FieldName: listJobsAppliedTo
      DataSourceName:
        Fn::GetAtt:
        - BabySitterFunctionDataSource
        - Name
  UpdateJobApplicationsSQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 20
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
          - UpdateJobApplicationsSQSDLQ
          - Arn
        maxReceiveCount: 5
  UpdateJobApplicationsSQSDLQ:
    Type: AWS::SQS::Queue
  BookNannyStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: ../../babysitter/step_functions_workflow/book_nanny.asl.json
      DefinitionSubstitutions:
        DDBTable:
          Ref: DynamoDBBabySitterTable
        SQSURL:
          Ref: UpdateJobApplicationsSQSQueue
    Connectors:
      SFDynamoDBConnectors:
        Properties:
          Destination:
            Id: DynamoDBBabySitterTable
          Permissions:
          - Read
          - Write
      SFQConnectors:
        Properties:
          Destination:
            Id: UpdateJobApplicationsSQSQueue
          Permissions:
          - Write
  DynamoDBBabySitterTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: PK
        AttributeType: S
      - AttributeName: SK
        AttributeType: S
      - AttributeName: GSI1PK
        AttributeType: S
      - AttributeName: GSI1SK
        AttributeType: S
      - AttributeName: GSI2PK
        AttributeType: S
      - AttributeName: GSI2SK
        AttributeType: S
      - AttributeName: jobStatus
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
      - AttributeName: PK
        KeyType: HASH
      - AttributeName: SK
        KeyType: RANGE
      GlobalSecondaryIndexes:
      - IndexName: jobApplications
        KeySchema:
        - AttributeName: GSI1PK
          KeyType: HASH
        - AttributeName: GSI1SK
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
      - IndexName: jobsAppliedTo
        KeySchema:
        - AttributeName: GSI2PK
          KeyType: HASH
        - AttributeName: GSI2SK
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
      - IndexName: getJobsByStatus
        KeySchema:
        - AttributeName: jobStatus
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
  AwsSamAutoDependencyLayerNestedStack:
    DeletionPolicy: Delete
    Metadata:
      CreatedBy: AWS SAM CLI sync command
    Properties:
      TemplateURL: /Users/rosius/Documents/babysitter_api/.aws-sam/auto-dependency-layer/adl_nested_template.yaml
    Type: AWS::CloudFormation::Stack
Outputs:
  BabySitterFunction:
    Description: Baby Sitter Lambda Function ARN
    Value:
      Fn::GetAtt:
      - BabySitterFunction
      - Arn
  UpdateJobApplicationsFunction:
    Description: Baby Sitter Lambda Function ARN
    Value:
      Fn::GetAtt:
      - UpdateJobApplicationsFunction
      - Arn
  BabySitterAPI:
    Value:
      Ref: BabySitterApi
